<% content_for :header_tags do %>
<%= javascript_include_tag "flotr-0.2.0-alpha.js", :plugin => 'redmine_management' %>
<%= javascript_include_tag "draw_scope_burnup_chart.js", :plugin => 'redmine_management' %>
<%= javascript_include_tag "draw_effort_burnup_chart.js", :plugin => 'redmine_management' %>
<%= stylesheet_link_tag "management_style.css" , :plugin => 'redmine_management' %>
<% end %>
<h2>Management</h2>
<div class='box' id="burn">
    <div class='right_box'>
        <ul>
            <input id='scope_reset_view' value='Reset view' type='submit'>
        </ul>
    </div>
    <div id="burnup_chart">
    </div>
</div>
<div class='box' id="scope">
    <div id="more_stats" class='right_box'>
        <p>
            Baseline should be:
        </p>
        <input id='baseline_method1' type='radio' name='estimation_method' value='deadline' checked/>
        <label for='baseline_method1'>
            Autogenerated based on deadline
        </label>
        <br/>
        <input id='baseline_method2' type='radio' name='estimation_method' value='velocity'/>
        <label for='baseline_method2'>
            Autogenerated based on velocity
        </label>
        <br/>
        <p>
            Last iteration velocity
        </p>
        <ul>
            <li>
                <%= @iteration_velocity %> man-hours/iteration
            </li>
        </ul>
        <p>
            Average team velocity
        </p>
        <ul>
            <li>
                <%= @average_velocity %> man-hours/iteration
            </li>
        </ul>
        <ul>
            <input id='reset_view' value='Reset view' type='submit'>
        </ul>
    </div>
    <div id="effort_burnup_chart">
    </div>
</div>
<script>
    			var baselinemethod =  'deadline'
                document.observe('dom:loaded', function(){
            		var all_points= <%= @all_points %>;
            		var all_points_dbd= <%= @all_points_dbd %>;
            		var dev_points= <%= @dev_points %>;
            		var dev_points_dbd= <%= @dev_points_dbd %>;
            		var qc_points= <%= @qc_points %>;
            		var qc_points_dbd= <%= @qc_points_dbd %>;
            		var closed_points = <%= @closed_points %>
            		var closed_points_dbd = <%= @closed_points_dbd %>
            		var x_axis = <%= @x_axis %>;
            		//------------------------------------------------------
            		var work_done_points= <%= @work_done %>;
            		var work_done_dbd= <%= @work_done_dbd %>;
            		var estimate_points= <%= @estimates %>;
            		var estimates_dbd= <%= @estimates_dbd %>;
            		var initial_estimate= <%= @initial_estimate %>;
            		var average_velocity = <%= @average_velocity %>;
            		var iteration_urls = <%= @iteration_urls %>;
            		var iteration_names = <%= @iteration_names %>;
					function getVal(){
						if($('baseline_method1').checked == true){
							return "deadline";
						}else if($('baseline_method2').checked == true){
							return "velocity";
						}
						return "deadline"
					}
                    draw_scope_burnup_chart(all_points,all_points_dbd,dev_points,dev_points_dbd, qc_points,qc_points_dbd,closed_points,closed_points_dbd, x_axis, iteration_urls,iteration_names,true,-1,-1,-1,-1);
            		draw_effort_burnup_chart(work_done_points,work_done_dbd ,estimate_points,estimates_dbd,initial_estimate,getVal(),average_velocity, x_axis, true,iteration_urls,iteration_names,-1,-1,-1,-1);
            		$('effort_burnup_chart').observe('flotr:select', function(evt){
                        var area = evt.memo[0];
                        draw_effort_burnup_chart(work_done_points,work_done_dbd ,estimate_points,estimates_dbd,initial_estimate,getVal(),average_velocity, x_axis, false,iteration_urls,iteration_names, area.x1, area.y1, area.x2, area.y2);
                    });
            		$('burnup_chart').observe('flotr:select', function(evt){
                        var bounds = evt.memo[0];
                        draw_scope_burnup_chart(all_points,all_points_dbd,dev_points,dev_points_dbd, qc_points,qc_points_dbd,closed_points,closed_points_dbd, x_axis, iteration_urls,iteration_names,false, bounds.x1, bounds.y1, bounds.x2, bounds.y2);
                    });
            		$('reset_view').observe('click', function(evt){
                        draw_effort_burnup_chart(work_done_points,work_done_dbd ,estimate_points,estimates_dbd,initial_estimate,getVal(),average_velocity, x_axis, false,iteration_urls,iteration_names,-1,-1,-1,-1);
                    });
        			$('scope_reset_view').observe('click', function(evt){
                        draw_scope_burnup_chart(all_points,all_points_dbd,dev_points,dev_points_dbd, qc_points,qc_points_dbd,closed_points,closed_points_dbd, x_axis, iteration_urls,iteration_names,false,-1,-1,-1,-1);
                    });
                });
</script>
